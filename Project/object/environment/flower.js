import {ColoredObject} from "../object.js";

export {Flower}
function reshapeArray(array, size) {
    var result = [];
    for (var i = 0; i < array.length; i += size) {
        var subarray = array.slice(i, i + size);
        subarray.splice(2, 0, 0); // Menambahkan 0 di indeks 2
        result.push(subarray);
    }
    return result;
}

class Flower extends ColoredObject{
    batang = null;
    constructor(shader_program){
        super([], [], shader_program, 1.0, 1.0, 1.0, 1.0);
        var controlPoints = [
            -0.171875,
            0.2136986301369863,
            -0.1521875,
            0.24888986301369864,
            -0.14685416666666667,
            0.2803331506849314,
            -0.14588333333333336,
            0.32597479452054795,
            -0.14734583333333337,
            0.3629019178082191,
            -0.15036458333333336,
            0.38536986301369863,
            -0.1540770833333333,
            0.4051835616438356,
            -0.1584447916666667,
            0.43633534246575345,
            -0.1563822916666667,
            0.47618191780821917,
            -0.14366979166666669,
            0.5177643835616438,
            -0.12520833333333334,
            0.5525479452054795,
            -0.10184583333333333,
            0.5739309589041096,
            -0.07722499999999997,
            0.5819353424657534,
            -0.055250000000000035,
            0.5792526027397261,
            -0.027979166666666586,
            0.5617008219178082,
            -0.00416666666666667,
            0.5328219178082192,
            0.00916875,
            0.4954213698630137,
            0.011643749999999998,
            0.4503671232876712,
            0.010518749999999969,
            0.40894246575342474,
            0.009849999999999946,
            0.3714520547945206,
            0.011249999999999986,
            0.33265753424657535,
            0.011831249999999998,
            0.28657753424657545,
            0.017231249999999997,
            0.2505183561643836,
            0.028893750000000044,
            0.22746958904109582,
            0.042935416666666684,
            0.2039671232876712,
            0.06119791666666663,
            0.1972602739726027,
            0.08182291666666659,
            0.2047561643835616,
            0.10169166666666674,
            0.2161709589041096,
            0.1180000000000001,
            0.21945863013698633,
            0.1354375,
            0.22766465753424656,
            0.15484374999999995,
            0.23539726027397265,
            0.17329791666666672,
            0.22242191780821918,
            0.18821770833333332,
            0.1999079452054795,
            0.19721770833333327,
            0.16085041095890404,
            0.19924270833333327,
            0.10711671232876713,
            0.1959635416666667,
            0.0683287671232877,
            0.19127604166666673,
            0.025957260273972705,
            0.18365520833333332,
            -0.01318794520547953,
            0.1695833333333334,
            -0.03249972602739732,
            0.15456249999999996,
            -0.06458739726027415,
            0.1374999999999999,
            -0.09709589041095898,
            0.11776666666666662,
            -0.11639013698630134,
            0.09781666666666669,
            -0.11836273972602744,
            0.08506666666666662,
            -0.11402301369863016,
            0.07604687499999994,
            -0.10557589041095891,
            0.06429687500000002,
            -0.09232876712328766,
            0.05275624999999993,
            -0.07852054794520533,
            0.038806250000000084,
            -0.06471232876712328,
            0.022847916666666607,
            -0.05906630136986295,
            0.009933333333333263,
            -0.07920219178082193,
            0.005208333333333259,
            -0.1205479452054794,
            0.01060833333333328,
            -0.16544438356164373,
            0.02428750000000001,
            -0.19994520547945197,
            0.036254166666666796,
            -0.23351452054794541,
            0.04457916666666677,
            -0.2680745205479453,
            0.04838541666666673,
            -0.304054794520548,
            0.0466770833333333,
            -0.3404734246575345,
            0.038428125000000014,
            -0.36991342465753424,
            0.023803125000000046,
            -0.3939791780821918,
            0.003553125000000097,
            -0.41615123287671224,
            -0.020364583333333196,
            -0.4383561643835615,
            -0.038852083333333357,
            -0.4399342465753424,
            -0.05576458333333332,
            -0.4243287671232877,
            -0.0793989583333333,
            -0.40641753424657545,
            -0.0942614583333333,
            -0.3737336986301371,
            -0.10622395833333337,
            -0.337753424657534,
            -0.12018229166666669,
            -0.3052317808219177,
            -0.13379479166666666,
            -0.27035616438356164,
            -0.14110729166666663,
            -0.23484931506849313,
            -0.14122291666666664,
            -0.19744219178082234,
            -0.13703124999999997,
            -0.15731506849315074,
            -0.13718124999999998,
            -0.1219463013698631,
            -0.14625624999999998,
            -0.0950400000000001,
            -0.16388541666666676,
            -0.08065315068493141,
            -0.1840010416666667,
            -0.08398246575342463,
            -0.19596354166666669,
            -0.09999999999999998,
            -0.20590104166666667,
            -0.12382904109589037,
            -0.22107604166666664,
            -0.14634958904109588,
            -0.23556354166666674,
            -0.1460515068493151,
            -0.2501135416666667,
            -0.13405808219178078,
            -0.26651041666666675,
            -0.1183561643835616,
            -0.28597708333333355,
            -0.10229479452054778,
            -0.30149374999999995,
            -0.08382465753424657,
            -0.30861875,
            -0.060153424657534274,
            -0.30794374999999996,
            -0.03316821917808228,
            -0.3090104166666667,
            -0.014410958904109747,
            -0.30878541666666665,
            0.00910246575342467,
            -0.30719375,
            0.035824657534246566,
            -0.30566562500000005,
            0.05750356164383558,
            -0.300715625,
            0.08564602739726021,
            -0.295390625,
            0.11199999999999993,
            -0.29085833333333333,
            0.13427726027397247,
            -0.2838083333333332,
            0.1633928767123291,
            -0.2740583333333332,
            0.18666958904109604,
            -0.2628125000000001,
            0.20380493150684909,
            -0.25156250000000013,
            0.21994520547945184,
            -0.24020937499999995,
            0.2369490410958905,
            -0.2240093749999999,
            0.24239342465753422,
            -0.20385520833333332,
            0.23324054794520546,
            -0.18659999999999996,
            0.2187353424657534
        ]

        controlPoints = reshapeArray(controlPoints, 2);
        console.log(controlPoints);

        var count = 60;
        var offset = 0;

        this.faces.push(...CURVE.createPlane(
            controlPoints, count, offset, {},
            [1, 0, 0],
            [11, 0, 6],
            [0, 2, 1]
        ).faces);
        this.vertex.push(...CURVE.createPlane(
            controlPoints, count, offset, {},
            [0.7, 0, -0.5],
            [11, 0, 6],
            [0, 2, 1]
        ).vertex);

        this.batang = new Flower_batang(shader_program);

        this.childs = [
            this.batang
        ]

        LIBS.translateY(this.LOCAL_MATRIX, 3);
        LIBS.translateZ(this.LOCAL_MATRIX, 15);
    }

    render(VIEW_MATRIX, PROJECTION_MATRIX, dt) {
        var temp = LIBS.get_I4();
        this.LOCAL_MATRIX = LIBS.multiply(temp, this.LOCAL_MATRIX);
        super.render(VIEW_MATRIX, PROJECTION_MATRIX);
    }
}

class Flower_batang extends ColoredObject {
    constructor(shader_program) {
        super([], [], shader_program, 1.0, 1.0, 1.0 ,1.0);
        this.faces.push(...QUADRIC.donut.createFaces(this.vertex.length/5));
        this.vertex.push(...QUADRIC.donut.createVertex(
            {},
            [0, -1, 0],
            [1, 10, 1],
            [],
            [],
            [0.1]
        ));
    }
}